name: CI

on:
  push:
    branches:
      - '*'
      - '!main'
  pull_request:
    branches:
      - 'main'

env:
  BUILDER_VERSION: v0.8.18
  BUILDER_SOURCE: releases
  BUILDER_HOST: https://d19elf31gohf1l.cloudfront.net
  PACKAGE_NAME: aws-crt-swift
  LINUX_BASE_IMAGE: ubuntu-16-x64
  RUN: ${{ github.run_id }}-${{ github.run_number }}

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: GitHub Action for SwiftLint
        uses: norio-nomura/action-swiftlint@3.1.0
      - name: GitHub Action for SwiftLint with --strict
        uses: norio-nomura/action-swiftlint@3.1.0
        with:
          args: --strict
      - name: GitHub Action for SwiftLint (Only files changed in the PR)
        uses: norio-nomura/action-swiftlint@3.1.0
        env:
          DIFF_BASE: ${{ github.base_ref }}
  ubuntu:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        image:
          - aws-crt-swift-5-ubuntu-16-x64
    steps:
      - name: Checkout Sources
        uses: actions/checkout@v2
        with:
          submodules: true
      # We can't use the `uses: docker://image` version yet, GitHub lacks authentication for actions -> packages
      - name: Build ${{ env.PACKAGE_NAME }}
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u awslabs --password-stdin
          export DOCKER_IMAGE=docker.pkg.github.com/awslabs/aws-crt-builder/${{ matrix.image }}:${{ env.BUILDER_VERSION }}
          docker pull $DOCKER_IMAGE
          docker run --mount type=bind,source=$(pwd),target=/root/${{ env.PACKAGE_NAME }} --env GITHUB_REF $DOCKER_IMAGE build -p ${{ env.PACKAGE_NAME }} --build-dir=/root/${{ env.PACKAGE_NAME }} --spec=downstream
  al2:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        image:
          - aws-crt-swift-5-al2-x64
    steps:
      - name: Checkout Sources
        uses: actions/checkout@v2
        with:
          submodules: true
      # We can't use the `uses: docker://image` version yet, GitHub lacks authentication for actions -> packages
      - name: Build ${{ env.PACKAGE_NAME }} + consumers
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u awslabs --password-stdin
          export DOCKER_IMAGE=docker.pkg.github.com/awslabs/aws-crt-builder/${{ matrix.image }}:${{ env.BUILDER_VERSION }}
          docker pull $DOCKER_IMAGE
          docker run --mount type=bind,source=$(pwd),target=/root/${{ env.PACKAGE_NAME }} --env GITHUB_REF $DOCKER_IMAGE build -p ${{ env.PACKAGE_NAME }} --build-dir=/root/${{ env.PACKAGE_NAME }} --spec=downstream
  centos:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        image:
          - aws-crt-swift-5-centos-x64
    steps:
      - name: Checkout Sources
        uses: actions/checkout@v2
        with:
          submodules: true
      # We can't use the `uses: docker://image` version yet, GitHub lacks authentication for actions -> packages
      - name: Build ${{ env.PACKAGE_NAME }}
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u awslabs --password-stdin
          export DOCKER_IMAGE=docker.pkg.github.com/awslabs/aws-crt-builder/${{ matrix.image }}:${{ env.BUILDER_VERSION }}
          docker pull $DOCKER_IMAGE
          docker run --mount type=bind,source=$(pwd),target=/root/${{ env.PACKAGE_NAME }} --env GITHUB_REF $DOCKER_IMAGE build -p ${{ env.PACKAGE_NAME }} --build-dir=/root/${{ env.PACKAGE_NAME }} --spec=downstream
  osx:
    runs-on: macos-11
    env:
      DEVELOPER_DIR: /Applications/Xcode_12.5.app
    steps:
      - name: Checkout Sources
        uses: actions/checkout@v2
        with:
          submodules: true
      - name: Build ${{ env.PACKAGE_NAME }} + consumers
        run: |
          python3 -c "from urllib.request import urlretrieve; urlretrieve('${{ env.BUILDER_HOST }}/${{ env.BUILDER_SOURCE }}/${{ env.BUILDER_VERSION }}/builder.pyz?run=${{ env.RUN }}', 'builder')"
          chmod a+x builder
          ./builder build -p ${{ env.PACKAGE_NAME }} --spec=downstream
  ios:
    runs-on: macos-11
    env:
      DEVELOPER_DIR: /Applications/Xcode_12.5.app
    steps:
      - name: Checkout Sources
        uses: actions/checkout@v2
        with:
          submodules: true
      - name: Build ${{ env.PACKAGE_NAME }} + consumers
        run: |
          python3 -c "from urllib.request import urlretrieve; urlretrieve('${{ env.BUILDER_HOST }}/${{ env.BUILDER_SOURCE }}/${{ env.BUILDER_VERSION }}/builder.pyz?run=${{ env.RUN }}', 'builder')"
          chmod a+x builder
          ./builder build -p ${{ env.PACKAGE_NAME }} --spec=downstream --target=ios-armv8
